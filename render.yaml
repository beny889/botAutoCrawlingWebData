services:
  - type: cron
    name: automation-bot-2x-daily
    env: python
    plan: starter
    pythonVersion: "3.11.9"
    schedule: "0 1,11 * * *"  # 8 AM & 6 PM WIB (1 AM & 11 AM UTC)
    buildCommand: |
      python --version
      pip install --no-cache-dir numpy==1.24.4
      pip install --no-cache-dir -r requirements.txt
      # Install required system packages
      apt-get update && apt-get install -y wget unzip curl gnupg2 software-properties-common
      # Method 1: Use snap to install chromium (often works when apt fails)
      snap install chromium || echo "Snap chromium install failed"
      # Method 2: Install chromium via apt
      apt-get install -y chromium-browser chromium-chromedriver || echo "Apt chromium install failed"  
      # Method 3: Manual Chrome installation with dependencies
      wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | apt-key add -
      echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google-chrome.list
      apt-get update
      apt-get install -y google-chrome-stable || echo "Google Chrome install failed"
      # Create symbolic links to ensure browsers are found
      ln -sf /snap/bin/chromium /usr/bin/chromium-browser 2>/dev/null || echo "Snap chromium link failed"
      ln -sf /usr/bin/google-chrome-stable /usr/bin/google-chrome 2>/dev/null || echo "Chrome link failed"
      # Final browser availability check
      echo "=== Final Browser Availability ==="
      for browser in chromium-browser chromium google-chrome-stable google-chrome /snap/bin/chromium; do
        if command -v "$browser" >/dev/null 2>&1; then
          echo "✓ Found: $browser at $(which $browser 2>/dev/null || echo /snap/bin/chromium)"
          "$browser" --version 2>/dev/null || echo "  Version check failed for $browser"
        else
          echo "✗ Missing: $browser"
        fi
      done
      echo "=== End Browser Check ==="
    startCommand: |
      export TZ=Asia/Jakarta
      echo "Starting automation with Selenium WebDriver..."
      google-chrome-stable --version || echo "Chrome not available"
      which google-chrome-stable && echo "Chrome found at: $(which google-chrome-stable)" || echo "Chrome not found"
      python main_scheduler.py --all --headless --production --single-session
    # Environment variables must be set in Render.com dashboard:
    # BACKEND_USERNAME, BACKEND_PASSWORD, TELEGRAM_TOKEN, TELEGRAM_CHAT_ID
    envVars:
      - key: HEADLESS
        value: "true"
      - key: TZ
        value: "Asia/Jakarta"
      - key: PYTHONUNBUFFERED
        value: "1"